# custom-made aliases

alias install="sudo aptitude install"
alias update="sudo aptitude update"
alias upgrade="sudo aptitude upgrade"
alias remove="sudo aptitude remove"
alias purge="sudo aptitude remove --purge"
alias search="aptitude search"
alias show="aptitude show"
alias up2="sudo aptitude update && sudo aptitude upgrade"

# gcp is a cp with progress bar
unalias "gcp"

alias ffmpeg="echo 'ALIAS OF AVCONV IN DEBIAN' && avconv"
alias py="python"
alias ipy="ipython --pylab"
alias pingo="ping google.com"

alias t="tmux"
alias v="vim"
alias e="vim"

# Git aliases in addition to oh-my-zsh
alias gshow="git show"

alias op="xdg-open"
alias nau="nautilus ."
alias sa="source activate"

unalias "ll"
unalias "l"
alias l="ls -l"
alias ll="ls -la"
alias h="fc -i -l 1"

# This is not really an alias because it appends some stuff at the end
function ssh () {/usr/bin/ssh -t $@ "tmux attach -t loginbase || tmux new -s loginbase";}
function tn () {TMUX=`tmux new-session -d -s $1` && tmux switch-client -t $1;}
function ts () {tmux switch-client -t $1;}
function tls () {echo 'tmux Sessions:'; tmux list-sessions;}
function tk () {tmux kill-session -t $1;}

# A shortcut function that simplifies usage of xclip.
# - Accepts input from either stdin (pipe), or params.
# ------------------------------------------------
cb() {
  local _scs_col="\e[0;32m"; local _wrn_col='\e[1;31m'; local _trn_col='\e[0;33m'
  # Check that xclip is installed.
  if ! type xclip > /dev/null 2>&1; then
    echo -e "$_wrn_col""You must have the 'xclip' program installed.\e[0m"
  # Check user is not root (root doesn't have access to user xorg server)
  elif [[ "$USER" == "root" ]]; then
    echo -e "$_wrn_col""Must be regular user (not root) to copy a file to the clipboard.\e[0m"
  else
    # If no tty, data should be available on stdin
    if ! [[ "$( tty )" == /dev/* ]]; then
      input="$(< /dev/stdin)"
    # Else, fetch input from params
    else
      input="$*"
    fi
    if [ -z "$input" ]; then  # If no input, print usage message.
      echo "Copies a string to the clipboard."
      echo "Usage: cb <string>"
      echo "       echo <string> | cb"
    else
      # Copy input to clipboard
      echo -n "$input" | xclip -selection c
      # Truncate text for status
      if [ ${#input} -gt 80 ]; then input="$(echo $input | cut -c1-80)$_trn_col...\e[0m"; fi
      # Print status.
      echo -e "$_scs_col""Copied to clipboard:\e[0m $input"
    fi
  fi
}
# Aliases / functions leveraging the cb() function
# ------------------------------------------------
# Copy contents of a file
function cbf() { cat "$1" | cb; }
# Copy SSH public key
alias cbssh="cbf ~/.ssh/id_rsa.pub"
# Copy current working directory
alias cbwd="pwd | cb"
# Copy most recent command in bash history
alias cbhs="cat $HISTFILE | tail -n 1 | cb"

# MA598 (UQ) shortcut
alias ma598="cd ~/courses/MA598/code/uq-course && source activate ma598 && jupyter notebook"
alias uq="ma598"
